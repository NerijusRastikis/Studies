// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentuInformacineSistema;

#nullable disable

namespace StudentuInformacineSistema.Migrations
{
    [DbContext(typeof(StudentsContext))]
    [Migration("20240923132302_Initial_db")]
    partial class Initial_db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DepartmentLecture", b =>
                {
                    b.Property<string>("DepartmentsDepartmentCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LecturesLectureName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DepartmentsDepartmentCode", "LecturesLectureName");

                    b.HasIndex("LecturesLectureName");

                    b.ToTable("DepartmentLectures", (string)null);

                    b.HasData(
                        new
                        {
                            DepartmentsDepartmentCode = "CS1234",
                            LecturesLectureName = "Algorithms"
                        },
                        new
                        {
                            DepartmentsDepartmentCode = "CS1234",
                            LecturesLectureName = "DataStructures"
                        },
                        new
                        {
                            DepartmentsDepartmentCode = "MTH567",
                            LecturesLectureName = "Calculus"
                        });
                });

            modelBuilder.Entity("LectureStudent", b =>
                {
                    b.Property<string>("LecturesLectureName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StudentsStudentNumber")
                        .HasColumnType("int");

                    b.HasKey("LecturesLectureName", "StudentsStudentNumber");

                    b.HasIndex("StudentsStudentNumber");

                    b.ToTable("StudentLectures", (string)null);

                    b.HasData(
                        new
                        {
                            LecturesLectureName = "Algorithms",
                            StudentsStudentNumber = 12345678
                        },
                        new
                        {
                            LecturesLectureName = "DataStructures",
                            StudentsStudentNumber = 12345678
                        },
                        new
                        {
                            LecturesLectureName = "Calculus",
                            StudentsStudentNumber = 87654321
                        });
                });

            modelBuilder.Entity("StudentuInformacineSistema.Database.Entities.Department", b =>
                {
                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentCode");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentCode = "CS1234",
                            DepartmentName = "ComputerScience"
                        },
                        new
                        {
                            DepartmentCode = "MTH567",
                            DepartmentName = "Mathematics"
                        });
                });

            modelBuilder.Entity("StudentuInformacineSistema.Database.Entities.Lecture", b =>
                {
                    b.Property<string>("LectureName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LectureTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LectureName");

                    b.ToTable("Lectures");

                    b.HasData(
                        new
                        {
                            LectureName = "Algorithms",
                            LectureTime = "10:00-11:30"
                        },
                        new
                        {
                            LectureName = "Calculus",
                            LectureTime = "12:00-13:30"
                        },
                        new
                        {
                            LectureName = "DataStructures",
                            LectureTime = "14:00-15:30"
                        });
                });

            modelBuilder.Entity("StudentuInformacineSistema.Database.Entities.Student", b =>
                {
                    b.Property<int>("StudentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentNumber");

                    b.HasIndex("DepartmentCode");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentNumber = 12345678,
                            DepartmentCode = "CS1234",
                            Email = "john.smith@example.com",
                            FirstName = "John",
                            LastName = "Smith"
                        },
                        new
                        {
                            StudentNumber = 87654321,
                            DepartmentCode = "MTH567",
                            Email = "alice.johnson@example.com",
                            FirstName = "Alice",
                            LastName = "Johnson"
                        });
                });

            modelBuilder.Entity("DepartmentLecture", b =>
                {
                    b.HasOne("StudentuInformacineSistema.Database.Entities.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentsDepartmentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentuInformacineSistema.Database.Entities.Lecture", null)
                        .WithMany()
                        .HasForeignKey("LecturesLectureName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LectureStudent", b =>
                {
                    b.HasOne("StudentuInformacineSistema.Database.Entities.Lecture", null)
                        .WithMany()
                        .HasForeignKey("LecturesLectureName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentuInformacineSistema.Database.Entities.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsStudentNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentuInformacineSistema.Database.Entities.Student", b =>
                {
                    b.HasOne("StudentuInformacineSistema.Database.Entities.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentCode");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("StudentuInformacineSistema.Database.Entities.Department", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
