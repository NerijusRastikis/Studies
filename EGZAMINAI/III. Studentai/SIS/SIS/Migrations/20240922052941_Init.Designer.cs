// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIS;

#nullable disable

namespace SIS.Migrations
{
    [DbContext(typeof(SISContext))]
    [Migration("20240922052941_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SIS.Database.Entities.Department", b =>
                {
                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DepartmentCode");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentCode = "CS1234",
                            DepartmentName = "ComputerScience"
                        },
                        new
                        {
                            DepartmentCode = "MTH567",
                            DepartmentName = "Mathematics"
                        });
                });

            modelBuilder.Entity("SIS.Database.Entities.DepartmentLecture", b =>
                {
                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("LectureId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentCode", "LectureId");

                    b.HasIndex("LectureId");

                    b.ToTable("DepartmentLecture");

                    b.HasData(
                        new
                        {
                            DepartmentCode = "CS1234",
                            LectureId = -1
                        },
                        new
                        {
                            DepartmentCode = "CS1234",
                            LectureId = -3
                        },
                        new
                        {
                            DepartmentCode = "MTH567",
                            LectureId = -2
                        });
                });

            modelBuilder.Entity("SIS.Database.Entities.Lecture", b =>
                {
                    b.Property<int>("LectureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LectureId"));

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("LectureEndTime")
                        .HasColumnType("time");

                    b.Property<string>("LectureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("LectureStartTime")
                        .HasColumnType("time");

                    b.HasKey("LectureId");

                    b.ToTable("Lectures");

                    b.HasData(
                        new
                        {
                            LectureId = -1,
                            DayOfWeek = "Monday",
                            LectureEndTime = new TimeSpan(0, 11, 30, 0, 0),
                            LectureName = "Algorithms",
                            LectureStartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            LectureId = -2,
                            DayOfWeek = "Tuesday",
                            LectureEndTime = new TimeSpan(0, 13, 30, 0, 0),
                            LectureName = "Calculus",
                            LectureStartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            LectureId = -3,
                            DayOfWeek = "Wednesday",
                            LectureEndTime = new TimeSpan(0, 15, 30, 0, 0),
                            LectureName = "DataStructures",
                            LectureStartTime = new TimeSpan(0, 14, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("SIS.Database.Entities.LectureStudent", b =>
                {
                    b.Property<int>("LectureId")
                        .HasColumnType("int");

                    b.Property<int>("StudentNumber")
                        .HasColumnType("int");

                    b.HasKey("LectureId", "StudentNumber");

                    b.HasIndex("StudentNumber");

                    b.ToTable("LectureStudent");

                    b.HasData(
                        new
                        {
                            LectureId = -1,
                            StudentNumber = 12345678
                        },
                        new
                        {
                            LectureId = -3,
                            StudentNumber = 12345678
                        },
                        new
                        {
                            LectureId = -2,
                            StudentNumber = 87654321
                        });
                });

            modelBuilder.Entity("SIS.Database.Entities.Student", b =>
                {
                    b.Property<int>("StudentNumber")
                        .HasMaxLength(8)
                        .HasColumnType("int");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StudentNumber");

                    b.HasIndex("DepartmentCode");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentNumber = 12345678,
                            DepartmentCode = "CS1234",
                            Email = "john.smith@example.com",
                            FirstName = "John",
                            LastName = "Smith"
                        },
                        new
                        {
                            StudentNumber = 87654321,
                            DepartmentCode = "MTH567",
                            Email = "alice.johnson@example.com",
                            FirstName = "Alice",
                            LastName = "Johnson"
                        });
                });

            modelBuilder.Entity("SIS.Database.Entities.DepartmentLecture", b =>
                {
                    b.HasOne("SIS.Database.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIS.Database.Entities.Lecture", "Lecture")
                        .WithMany()
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Lecture");
                });

            modelBuilder.Entity("SIS.Database.Entities.LectureStudent", b =>
                {
                    b.HasOne("SIS.Database.Entities.Lecture", "Lecture")
                        .WithMany("Students")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SIS.Database.Entities.Student", "Student")
                        .WithMany("Lectures")
                        .HasForeignKey("StudentNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SIS.Database.Entities.Student", b =>
                {
                    b.HasOne("SIS.Database.Entities.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("DepartmentCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SIS.Database.Entities.Department", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SIS.Database.Entities.Lecture", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SIS.Database.Entities.Student", b =>
                {
                    b.Navigation("Lectures");
                });
#pragma warning restore 612, 618
        }
    }
}
